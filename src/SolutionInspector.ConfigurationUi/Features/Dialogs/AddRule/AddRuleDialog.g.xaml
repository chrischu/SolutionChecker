<UserControl x:Class="SolutionInspector.ConfigurationUi.Features.Dialogs.AddRule.AddRuleDialog" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ns0="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf" xmlns:ns1="clr-namespace:AmmySidekick;assembly=AmmySidekick" xmlns:ns2="clr-namespace:SolutionInspector.ConfigurationUi.Infrastructure.Behaviors" xmlns:ns3="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" xmlns:ns4="clr-namespace:SolutionInspector.ConfigurationUi.Features.Dialogs.AddRule" ns1:Ammy.Register="/SolutionInspector.ConfigurationUi;component/Features/Dialogs/AddRule/AddRuleDialog.g.xaml">
  <UserControl.Width>
    <Binding Path="ActualWidth" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Window}}" Converter="{x:Static ns1:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;6&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;binary op=&quot;Mul&quot;&gt;&lt;parameter name=&quot;x&quot; type=&quot;System.Double&quot; /&gt;&lt;prim val=&quot;0.75&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Double&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/binary&gt;&lt;parameter name=&quot;x&quot; type=&quot;System.Double&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
  </UserControl.Width>
  <UserControl.Height>
    <Binding Path="ActualHeight" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Window}}" Converter="{x:Static ns1:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;6&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;binary op=&quot;Mul&quot;&gt;&lt;parameter name=&quot;x&quot; type=&quot;System.Double&quot; /&gt;&lt;prim val=&quot;0.75&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Double&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/binary&gt;&lt;parameter name=&quot;x&quot; type=&quot;System.Double&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
  </UserControl.Height>
  <DockPanel Margin="18">
    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Margin="0 0 0 12">
      <TextBlock Style="{StaticResource MaterialDesignTitleTextBlock}" VerticalAlignment="Center">
        <TextBlock.Text>
          <Binding Path="Title"/>
        </TextBlock.Text>
      </TextBlock>
      <ns0:ColorZone Mode="Standard" VerticalAlignment="Center" Margin="12 0">
        <DockPanel>
          <Button ToolTip="Filter Rules" Style="{StaticResource MaterialDesignToolButton}" ns0:RippleAssist.IsCentered="True" DockPanel.Dock="Left" Opacity="0.56">
            <ns0:PackIcon Kind="Magnify"/>
            <ns3:Interaction.Behaviors>
              <ns2:SearchButtonBehavior>
                <ns2:SearchButtonBehavior.SearchBox>
                  <Binding Path="Children[2]" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type DockPanel}}" Converter="{x:Static ns1:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;0&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;cast&gt;&lt;typeinfo typename=&quot;System.Windows.Controls.TextBox&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;parameter name=&quot;e&quot; type=&quot;System.Windows.UIElement&quot; /&gt;&lt;/cast&gt;&lt;parameter name=&quot;e&quot; type=&quot;System.Windows.UIElement&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
                </ns2:SearchButtonBehavior.SearchBox>
              </ns2:SearchButtonBehavior>
            </ns3:Interaction.Behaviors>
          </Button>
          <Button ToolTip="Clear" Style="{StaticResource MaterialDesignToolButton}" ns0:RippleAssist.IsCentered="True" DockPanel.Dock="Right" Opacity="0.56">
            <ns0:PackIcon Kind="Close"/>
            <Button.Visibility>
              <Binding Path="Children[2].Text.Length" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type DockPanel}}" Converter="{x:Static ns1:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;1&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;ternary&gt;&lt;binary op=&quot;Greater&quot;&gt;&lt;parameter name=&quot;length&quot; type=&quot;System.Int32&quot; /&gt;&lt;prim val=&quot;0&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Int32&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/binary&gt;&lt;prim val=&quot;System.Windows.Visibility.Visible&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Windows.Visibility&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;prim val=&quot;System.Windows.Visibility.Hidden&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Windows.Visibility&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/ternary&gt;&lt;parameter name=&quot;length&quot; type=&quot;System.Int32&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
            </Button.Visibility>
            <ns3:Interaction.Behaviors>
              <ns2:ClearTextBoxBehavior>
                <ns2:ClearTextBoxBehavior.TextBox>
                  <Binding Path="Children[2]" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type DockPanel}}" Converter="{x:Static ns1:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;0&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;cast&gt;&lt;typeinfo typename=&quot;System.Windows.Controls.TextBox&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;parameter name=&quot;e&quot; type=&quot;System.Windows.UIElement&quot; /&gt;&lt;/cast&gt;&lt;parameter name=&quot;e&quot; type=&quot;System.Windows.UIElement&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
                </ns2:ClearTextBoxBehavior.TextBox>
              </ns2:ClearTextBoxBehavior>
            </ns3:Interaction.Behaviors>
          </Button>
          <TextBox Width="200" VerticalAlignment="Center" BorderThickness="0" ns0:TextFieldAssist.DecorationVisibility="Hidden" ns0:HintAssist.Hint="Filter Rules">
            <TextBox.Text>
              <Binding Path="Filter" UpdateSourceTrigger="PropertyChanged"/>
            </TextBox.Text>
          </TextBox>
        </DockPanel>
      </ns0:ColorZone>
    </StackPanel>
    <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" HorizontalAlignment="Right" Margin="0 24 0 0">
      <Button x:Name="AcceptButton" Style="{StaticResource MaterialDesignFlatButton}" IsDefault="True" Command="{x:Static ns0:DialogHost.CloseDialogCommand}" Content="ADD">
        <Button.IsEnabled>
          <Binding Path="SelectedIndex" ElementName="Rules" Converter="{x:Static ns1:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;7&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;binary op=&quot;GreaterEqual&quot;&gt;&lt;parameter name=&quot;index&quot; type=&quot;System.Int32&quot; /&gt;&lt;prim val=&quot;0&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Int32&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/binary&gt;&lt;parameter name=&quot;index&quot; type=&quot;System.Int32&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
        </Button.IsEnabled>
        <Button.CommandParameter>
          <Binding Path="SelectedRule"/>
        </Button.CommandParameter>
      </Button>
      <Button Style="{StaticResource MaterialDesignFlatButton}" IsCancel="True" Command="{x:Static ns0:DialogHost.CloseDialogCommand}" CommandParameter="{x:Null}" Content="CANCEL"/>
    </StackPanel>
    <Grid>
      <TextBlock>
        <TextBlock.Visibility>
          <Binding Path="AvailableRules.IsEmpty" Converter="{x:Static ns1:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;8&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;ternary&gt;&lt;parameter name=&quot;isEmpty&quot; type=&quot;System.Boolean&quot; /&gt;&lt;prim val=&quot;System.Windows.Visibility.Visible&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Windows.Visibility&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;prim val=&quot;System.Windows.Visibility.Collapsed&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Windows.Visibility&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/ternary&gt;&lt;parameter name=&quot;isEmpty&quot; type=&quot;System.Boolean&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
        </TextBlock.Visibility>
        <TextBlock.Text>
          <Binding Path="Filter" Converter="{x:Static ns1:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;9&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;binary op=&quot;Sum&quot;&gt;&lt;binary op=&quot;Sum&quot;&gt;&lt;prim val=&quot;No Rules match the filter &amp;apos;&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.String&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;parameter name=&quot;filter&quot; type=&quot;System.String&quot; /&gt;&lt;/binary&gt;&lt;prim val=&quot;&amp;apos;.&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.String&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/binary&gt;&lt;parameter name=&quot;filter&quot; type=&quot;System.String&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
        </TextBlock.Text>
      </TextBlock>
      <ListBox x:Name="Rules">
        <ListBox.ItemsSource>
          <Binding Path="AvailableRules"/>
        </ListBox.ItemsSource>
        <ListBox.SelectedItem>
          <Binding Path="SelectedRule"/>
        </ListBox.SelectedItem>
        <ListBox.GroupStyle>
          <GroupStyle>
            <GroupStyle.ContainerStyle>
              <Style TargetType="{x:Type GroupItem}">
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate>
                      <Expander IsExpanded="True">
                        <Expander.Header>
                          <TextBlock Style="{StaticResource MaterialDesignSubheadingTextBlock}">
                            <Run>
                              <Run.Text>
                                <Binding Path="Name" Mode="OneWay"/>
                              </Run.Text>
                            </Run>
                            <Run Text="{Binding ItemCount, Mode=OneWay, StringFormat=({0} Rule(s))}"/>
                          </TextBlock>
                        </Expander.Header>
                        <ItemsPresenter/>
                      </Expander>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </GroupStyle.ContainerStyle>
          </GroupStyle>
        </ListBox.GroupStyle>
        <ListBox.ItemTemplate>
          <DataTemplate DataType="{x:Type ns4:AvailableRuleAssemblyViewModel}">
            <StackPanel>
              <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap">
                <TextBlock.Text>
                  <Binding Path="Name"/>
                </TextBlock.Text>
              </TextBlock>
              <TextBlock Style="{StaticResource MaterialDesignCaptionTextBlock}" TextWrapping="Wrap">
                <TextBlock.Text>
                  <Binding Path="Documentation"/>
                </TextBlock.Text>
              </TextBlock>
            </StackPanel>
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>
    </Grid>
  </DockPanel>
</UserControl>