<UserControl x:Class="SolutionInspector.ConfigurationUi.Features.Edit.EditPage" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ns0="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf" xmlns:ns1="clr-namespace:AmmySidekick;assembly=AmmySidekick" xmlns:ns2="clr-namespace:SolutionInspector.ConfigurationUi.Infrastructure.Behaviors" xmlns:ns3="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" ns1:Ammy.Register="/SolutionInspector.ConfigurationUi;component/Features/Edit/EditPage.g.xaml">
  <UserControl.InputBindings>
    <KeyBinding Modifiers="Control" Key="N">
      <KeyBinding.Command>
        <Binding Path="NewCommand"/>
      </KeyBinding.Command>
    </KeyBinding>
    <KeyBinding Modifiers="Control" Key="O">
      <KeyBinding.Command>
        <Binding Path="OpenCommand"/>
      </KeyBinding.Command>
    </KeyBinding>
    <KeyBinding Modifiers="Control" Key="S">
      <KeyBinding.Command>
        <Binding Path="SaveCommand"/>
      </KeyBinding.Command>
    </KeyBinding>
    <KeyBinding Modifiers="Control" Key="Z">
      <KeyBinding.Command>
        <Binding Path="UndoCommand"/>
      </KeyBinding.Command>
    </KeyBinding>
    <KeyBinding Modifiers="Control" Key="Y">
      <KeyBinding.Command>
        <Binding Path="RedoCommand"/>
      </KeyBinding.Command>
    </KeyBinding>
  </UserControl.InputBindings>
  <DockPanel>
    <Menu DockPanel.Dock="Top" IsMainMenu="True">
      <MenuItem Header="_File">
        <MenuItem Header="_New" InputGestureText="Ctrl+N">
          <MenuItem.Icon>
            <ns0:PackIcon Kind="FileOutline"/>
          </MenuItem.Icon>
          <MenuItem.Command>
            <Binding Path="NewCommand"/>
          </MenuItem.Command>
        </MenuItem>
        <MenuItem Header="_Open" InputGestureText="Ctrl+O">
          <MenuItem.Icon>
            <ns0:PackIcon Kind="OpenInApp"/>
          </MenuItem.Icon>
          <MenuItem.Command>
            <Binding Path="OpenCommand"/>
          </MenuItem.Command>
        </MenuItem>
        <Separator/>
        <MenuItem Header="_Close">
          <MenuItem.Icon>
            <ns0:PackIcon Kind="Close"/>
          </MenuItem.Icon>
          <MenuItem.Command>
            <Binding Path="CloseCommand"/>
          </MenuItem.Command>
        </MenuItem>
        <Separator/>
        <MenuItem Header="_Save" InputGestureText="Ctrl+S">
          <MenuItem.Icon>
            <ns0:PackIcon Kind="ContentSave"/>
          </MenuItem.Icon>
          <MenuItem.Command>
            <Binding Path="SaveCommand"/>
          </MenuItem.Command>
        </MenuItem>
      </MenuItem>
      <MenuItem Header="_Edit">
        <MenuItem Header="_Undo" InputGestureText="Ctrl+Z">
          <MenuItem.Icon>
            <ns0:PackIcon Kind="Undo"/>
          </MenuItem.Icon>
          <MenuItem.Command>
            <Binding Path="UndoCommand"/>
          </MenuItem.Command>
        </MenuItem>
        <MenuItem Header="_Redo" InputGestureText="Ctrl+Y">
          <MenuItem.Icon>
            <ns0:PackIcon Kind="Redo"/>
          </MenuItem.Icon>
          <MenuItem.Command>
            <Binding Path="RedoCommand"/>
          </MenuItem.Command>
        </MenuItem>
      </MenuItem>
    </Menu>
    <ToolBarTray DockPanel.Dock="Top">
      <ToolBar Style="{StaticResource MaterialDesignToolBar}">
        <Button ToolTip="New">
          <ns0:PackIcon Kind="FileOutline"/>
          <Button.Command>
            <Binding Path="NewCommand"/>
          </Button.Command>
        </Button>
        <Button ToolTip="Open">
          <ns0:PackIcon Kind="OpenInApp"/>
          <Button.Command>
            <Binding Path="OpenCommand"/>
          </Button.Command>
        </Button>
        <Button ToolTip="Save">
          <ns0:PackIcon Kind="ContentSave"/>
          <Button.Command>
            <Binding Path="SaveCommand"/>
          </Button.Command>
        </Button>
        <Separator/>
        <Button ToolTip="Undo">
          <ns0:PackIcon Kind="Undo"/>
          <Button.Command>
            <Binding Path="UndoCommand"/>
          </Button.Command>
        </Button>
        <Button ToolTip="Redo">
          <ns0:PackIcon Kind="Redo"/>
          <Button.Command>
            <Binding Path="RedoCommand"/>
          </Button.Command>
        </Button>
        <Separator/>
        <ns0:ColorZone Mode="Standard" VerticalAlignment="Center">
          <DockPanel>
            <Button ToolTip="Filter Rules" Style="{StaticResource MaterialDesignToolButton}" ns0:RippleAssist.IsCentered="True" DockPanel.Dock="Left" Opacity="0.56">
              <ns0:PackIcon Kind="Magnify"/>
              <ns3:Interaction.Behaviors>
                <ns2:SearchButtonBehavior>
                  <ns2:SearchButtonBehavior.SearchBox>
                    <Binding Path="Children[2]" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type DockPanel}}" Converter="{x:Static ns1:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;0&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;cast&gt;&lt;typeinfo typename=&quot;System.Windows.Controls.TextBox&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;parameter name=&quot;e&quot; type=&quot;System.Windows.UIElement&quot; /&gt;&lt;/cast&gt;&lt;parameter name=&quot;e&quot; type=&quot;System.Windows.UIElement&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
                  </ns2:SearchButtonBehavior.SearchBox>
                </ns2:SearchButtonBehavior>
              </ns3:Interaction.Behaviors>
            </Button>
            <Button ToolTip="Clear" Style="{StaticResource MaterialDesignToolButton}" ns0:RippleAssist.IsCentered="True" DockPanel.Dock="Right" Opacity="0.56">
              <ns0:PackIcon Kind="Close"/>
              <Button.Visibility>
                <Binding Path="Children[2].Text.Length" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type DockPanel}}" Converter="{x:Static ns1:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;1&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;ternary&gt;&lt;binary op=&quot;Greater&quot;&gt;&lt;parameter name=&quot;length&quot; type=&quot;System.Int32&quot; /&gt;&lt;prim val=&quot;0&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Int32&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/binary&gt;&lt;prim val=&quot;System.Windows.Visibility.Visible&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Windows.Visibility&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;prim val=&quot;System.Windows.Visibility.Hidden&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Windows.Visibility&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/ternary&gt;&lt;parameter name=&quot;length&quot; type=&quot;System.Int32&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
              </Button.Visibility>
              <ns3:Interaction.Behaviors>
                <ns2:ClearTextBoxBehavior>
                  <ns2:ClearTextBoxBehavior.TextBox>
                    <Binding Path="Children[2]" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type DockPanel}}" Converter="{x:Static ns1:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;0&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;cast&gt;&lt;typeinfo typename=&quot;System.Windows.Controls.TextBox&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;parameter name=&quot;e&quot; type=&quot;System.Windows.UIElement&quot; /&gt;&lt;/cast&gt;&lt;parameter name=&quot;e&quot; type=&quot;System.Windows.UIElement&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
                  </ns2:ClearTextBoxBehavior.TextBox>
                </ns2:ClearTextBoxBehavior>
              </ns3:Interaction.Behaviors>
            </Button>
            <TextBox Width="200" VerticalAlignment="Center" BorderThickness="0" ns0:TextFieldAssist.DecorationVisibility="Hidden" ns0:HintAssist.Hint="Filter Rules">
              <TextBox.Text>
                <Binding Path="Ruleset.Rules.GlobalRulesFilter" UpdateSourceTrigger="PropertyChanged"/>
              </TextBox.Text>
            </TextBox>
          </DockPanel>
        </ns0:ColorZone>
      </ToolBar>
    </ToolBarTray>
    <ns0:DialogHost Focusable="False" Identifier="Edit">
      <Grid x:Name="LayoutRoot">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="auto"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Border Grid.Column="0" BorderThickness="0 0 1 0" BorderBrush="Black">
          <Expander ExpandDirection="Left" Background="{StaticResource PrimaryHueMidBrush}" Foreground="{StaticResource PrimaryHueMidForegroundBrush}">
            <Expander.Header>
              <TextBlock Style="{StaticResource MaterialDesignHeadlineTextBlock}" Text="Assembly Imports" VerticalAlignment="Center">
                <TextBlock.LayoutTransform>
                  <RotateTransform Angle="90"/>
                </TextBlock.LayoutTransform>
              </TextBlock>
            </Expander.Header>
            <Button Width="50"/>
          </Expander>
        </Border>
        <ScrollViewer Grid.Column="1">
          <StackPanel x:Name="Rules">
            <StackPanel.DataContext>
              <Binding Path="Ruleset.Rules"/>
            </StackPanel.DataContext>
            <ContentPresenter>
              <ContentPresenter.Content>
                <Binding Path="SolutionRules"/>
              </ContentPresenter.Content>
            </ContentPresenter>
            <ContentPresenter>
              <ContentPresenter.Content>
                <Binding Path="ProjectRules"/>
              </ContentPresenter.Content>
            </ContentPresenter>
            <ContentPresenter>
              <ContentPresenter.Content>
                <Binding Path="ProjectItemRules"/>
              </ContentPresenter.Content>
            </ContentPresenter>
          </StackPanel>
        </ScrollViewer>
      </Grid>
    </ns0:DialogHost>
  </DockPanel>
</UserControl>