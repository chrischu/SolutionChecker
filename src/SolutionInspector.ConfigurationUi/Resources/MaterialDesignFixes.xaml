<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf">

  <converters:MathMultipleConverter x:Key="MathMlpMultipleConverter" Operation="Multiply" />

  <Style TargetType="{x:Type Expander}">
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
    <Setter Property="Foreground"
            Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ExpansionStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" To="Expanded">
                    <VisualTransition.GeneratedEasingFunction>
                      <CubicEase EasingMode="EaseOut" />
                    </VisualTransition.GeneratedEasingFunction>
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="1" Duration="0:0:0.3" />
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition GeneratedDuration="0" To="Collapsed">
                    <VisualTransition.GeneratedEasingFunction>
                      <CubicEase EasingMode="EaseOut" />
                    </VisualTransition.GeneratedEasingFunction>
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="0" Duration="0:0:0.3" />
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Expanded">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="1" Duration="0" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Collapsed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="0" Duration="0" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <DockPanel Background="{TemplateBinding Background}">
                <ToggleButton Name="HeaderSite"
                              DockPanel.Dock="Top"
                              BorderThickness="0" Cursor="Hand"
                              IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              Style="{DynamicResource MaterialDesignExpanderDownHeaderStyle}"
                              TextElement.FontSize="15"
                              Opacity=".87"
                              Foreground="{TemplateBinding Foreground}"
                              Content="{TemplateBinding Header}"
                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                              ContentStringFormat="{TemplateBinding HeaderStringFormat}" />
                <Border Name="ContentSite"
                        DockPanel.Dock="Bottom">
                  <StackPanel Name="ContentPanel"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    <StackPanel.Height>
                      <MultiBinding Converter="{StaticResource MathMlpMultipleConverter}">
                        <Binding ElementName="PART_Content" Path="ActualHeight" />
                        <Binding ElementName="PART_Content" Path="Opacity" />
                      </MultiBinding>
                    </StackPanel.Height>
                    <StackPanel.Width>
                      <MultiBinding Converter="{StaticResource MathMlpMultipleConverter}">
                        <Binding ElementName="PART_Content" Path="ActualWidth" />
                        <Binding ElementName="PART_Content" Path="Opacity" />
                      </MultiBinding>
                    </StackPanel.Width>
                    <ContentPresenter Name="PART_Content" Focusable="False"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                  </StackPanel>
                </Border>
              </DockPanel>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ExpandDirection" Value="Right">
              <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />
              <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Right" />
              <Setter Property="Orientation" TargetName="ContentPanel" Value="Horizontal" />
              <Setter Property="Height" TargetName="ContentPanel" Value="Auto" />
              <Setter Property="Style" TargetName="HeaderSite" Value="{DynamicResource MaterialDesignExpanderRightHeaderStyle}" />
            </Trigger>

            <Trigger Property="ExpandDirection" Value="Left">
              <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />
              <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Left" />
              <Setter Property="Orientation" TargetName="ContentPanel" Value="Horizontal" />
              <Setter Property="Height" TargetName="ContentPanel" Value="Auto" />
              <Setter Property="Style" TargetName="HeaderSite" Value="{DynamicResource MaterialDesignExpanderLeftHeaderStyle}" />
            </Trigger>

            <Trigger Property="ExpandDirection" Value="Up">
              <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />
              <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Top" />
              <Setter Property="Orientation" TargetName="ContentPanel" Value="Vertical" />
              <Setter Property="Width" TargetName="ContentPanel" Value="Auto" />
              <Setter Property="Style" TargetName="HeaderSite" Value="{DynamicResource MaterialDesignExpanderUpHeaderStyle}" />
            </Trigger>

            <Trigger Property="ExpandDirection" Value="Down">
              <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Top" />
              <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Bottom" />
              <Setter Property="Orientation" TargetName="ContentPanel" Value="Vertical" />
              <Setter Property="Width" TargetName="ContentPanel" Value="Auto" />
              <Setter Property="Style" TargetName="HeaderSite" Value="{DynamicResource MaterialDesignExpanderDownHeaderStyle}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ReSharper disable once Xaml.StaticResourceNotResolved -->
  <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MaterialDesignCheckBox}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="Click">
              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="InteractionEllipse">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="InteractionEllipse">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                             Storyboard.TargetName="InteractionEllipse">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                                             Storyboard.TargetName="InteractionEllipse">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InteractionEllipse">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Viewbox x:Name="Viewbox" Width="18" Height="18" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                     FlowDirection="LeftToRight">
              <Canvas Width="24" Height="24">
                <Path x:Name="Graphic"
                      Data="M 19,3 L 5,3 C 3.89,3 3,3.89 3,5 L 3,19 A 2,2 0 0 0 5,21 L 19,21 A 2,2 0 0 0 21,19 L 21,5 C 21,3.89 20.1,3 19,3 M 19,5 L 19,19 5,19 5,5 19,5 Z"
                      Fill="{DynamicResource MaterialDesignCheckBoxOff}"/>
                <Ellipse x:Name="InteractionEllipse" Fill="{TemplateBinding Control.Foreground}" Width="0" Height="0"
                         Canvas.Top="12" Canvas.Left="12" Opacity="0" RenderTransformOrigin="0.5,0.5"
                         IsHitTestVisible="false">
                  <UIElement.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform/>
                      <SkewTransform/>
                      <RotateTransform/>
                      <TranslateTransform/>
                    </TransformGroup>
                  </UIElement.RenderTransform>
                </Ellipse>
              </Canvas>
            </Viewbox>
            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="false"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="ButtonBase.Click">
              <BeginStoryboard Storyboard="{StaticResource Click}"/>
            </EventTrigger>
            <Trigger Property="ContentControl.HasContent" Value="true">
              <!-- ReSharper disable once Xaml.StaticResourceNotResolved -->
              <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FrameworkElement.FocusVisualStyle"/>
              <Setter Property="Control.Padding" Value="4,2,0,0"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Graphic" Value="{DynamicResource MaterialDesignCheckBoxDisabled}" Property="Shape.Fill"/>
              <Setter TargetName="Viewbox" Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true"/>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Graphic" Property="Path.Data"
                      Value="M 10,17 L 5,12 6.41,10.58 10,14.17 17.59,6.58 19,8 M 19,3 L 5,3 C 3.89,3 3,3.89 3,5 L 3,19 A 2,2 0 0 0 5,21 L 19,21 A 2,2 0 0 0 21,19 L 21,5 C 21,3.89 20.1,3 19,3 Z"/>
              <Setter TargetName="Graphic"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                      Property="Shape.Fill"/>
            </Trigger>
            <Trigger Value="{x:Null}" Property="ToggleButton.IsChecked">
              <Setter TargetName="Graphic" Property="Path.Data"
                      Value="M 10,17 L 5,12 6.41,10.58 10,14.17 17.59,6.58 19,8 M 19,3 L 5,3 C 3.89,3 3,3.89 3,5 L 3,19 A 2,2 0 0 0 5,21 L 19,21 A 2,2 0 0 0 21,19 L 21,5 C 21,3.89 20.1,3 19,3 Z"/>
              <Setter TargetName="Graphic" Property="UIElement.Opacity" Value="0.56"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="true">
              <Setter TargetName="Graphic" Value="{DynamicResource ValidationErrorBrush}" Property="Shape.Fill"/>
              <Setter TargetName="contentPresenter" Value="{DynamicResource ValidationErrorBrush}"
                      Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>